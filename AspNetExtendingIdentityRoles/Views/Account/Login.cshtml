@model AspNetExtendingIdentityRoles.Models.LoginViewModel
@{
    ViewBag.Title = "Log in";
}


@Styles.Render("~/Content/Site.css")
@Styles.Render("~/Content/formContainer.css")


<style>
    body {
        overflow: auto;
        /*color: #907e7e;*/
        color: #ffffff;
    }
</style>


@*<style>
        .formcontainer {
            background-color: rgba(255, 228, 196, 0.3);
            padding: 5%;
            margin: auto;
            border-radius: 20px;
            max-width: 50%;
        }

            .formcontainer:hover {
                /*border: 5px solid #3b5998;*/
                box-shadow: 0 0 50px #706fad;
                transition: all 0.5s ease;
            }

            .formcontainer:not(:hover) {
                /*border: 5px solid #3b5998;*/
                box-shadow: 0 0 0px #3b5998;
                transition: all 0.5s ease;
            }

    </style>*@



<h2>@ViewBag.Title.</h2>
<div class="row">
    <div>
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                <div class="formcontainer">
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    @*<hr />*@
                    @Html.ValidationSummary(true)
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Register", "Register", "Account") if you don't have a local account.
                    </p>
                    @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn btn-default" type="button" onclick="window.location.href='http://www.google.gr'">link to google gr</button>
                                <button class="btn btn-default" type="button" href="@Html.ActionLink("Register", "Register", "Account")">link to google gr</button>
                                <input type="submit" value="Log in" class="btn btn-default" />
                            </div>
                        </div>*@

                </div>
            }
        </section>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}